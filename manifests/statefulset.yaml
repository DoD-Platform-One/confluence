---
# Source: confluence/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: confluence
---
# Source: confluence/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: confluence
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - pods
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
# Source: confluence/templates/clusterrolebindings.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: confluence
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: confluence
subjects:
- kind: ServiceAccount
  name: confluence
  namespace: confluence
---
# Source: confluence/templates/service.yaml
# Documentation: https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: confluence
  labels:    
      generator: helm
      date: 2020-07-06
      chart: confluence
      version: 1.1.0
      app_name: confluence
      app_version: conf-7.5.0
      release: confluence
      heritage: Helm

  annotations:
    traefik.backend.loadbalancer.sticky: "true"

spec:
  ports:
    # port is what this service should serve on, and targetPort is the port in the container.
    - port: 8090
      name: confluence-main
      targetPort: 8090
      protocol: TCP
    - port: 8888
      name: confluence-internal-connector
      targetPort: 8888
      protocol: TCP
    - port: 8091
      name: synchrony
      protocol: TCP
      targetPort: 8091
  clusterIP: None

  selector:
    app: confluence
#####
---
# Source: confluence/templates/statefulset.yaml
# Note: DO NOT use TABs. Just use spaces.
apiVersion: apps/v1
## We needed to use VolumeTemplate, which does not allow use of Deployment, so we had to use StatefulSet
# kind: Deployment
kind: StatefulSet
metadata:
  name: confluence
  labels:    
      generator: helm
      date: 2020-07-06
      chart: confluence
      version: 1.1.0
      app_name: confluence
      app_version: conf-7.5.0
      release: confluence
      heritage: Helm
spec:
  # This service should already exist
  serviceName: confluence
  replicas: 1    ## replicas 2
  selector:
    matchLabels:
      app: confluence
  template:
    metadata:
      labels:
        app: confluence
    spec:
      securityContext:
        fsGroup: 2002
      initContainers:
        - name: nodepeers
          image: registry.dsop.io/platform-one/apps/confluence/alpine:confluence-1.0
          imagePullPolicy: Always
          command: ["/bin/bash", "-c", "/tmp/init-script.sh"]
          volumeMounts:
            - name: "confluence-persistent-storage"
              mountPath: /var/atlassian/application-data/confluence/
            - name: "confluence-datacenter"
              mountPath: /var/atlassian/confluence-datacenter/
            - name: "init-script"
              mountPath: /tmp
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONFLUENCE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFLUENCE_SERVICE_NAME
              value: confluence
            - name: CONFLUENCE_HOME
              value: /var/atlassian/application-data/confluence/

      serviceAccountName: confluence
      terminationGracePeriodSeconds: 50
      containers:
      - name: confluence
        image: registry.dsop.io/platform-one/apps/confluence/confluence-server:7.4.1
        imagePullPolicy: Always
        securityContext:
          runAsUser: 2002
          runAsGroup: 2002
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "32Gi"

        ports:
          - containerPort: 8090
            name: confluence-main
          - containerPort: 8091
            name: synchrony

        env:
          - name: CATALINA_OPTS
            value: "-Dfile.encoding=UTF-8 -Dconfluence.cluster.node.name=$(hostname)"
          - name: ATL_PROXY_NAME
            value: "confluence.t-rex.dsop.io"
          - name: ATL_PROXY_PORT
            value: "443"
          - name: ATL_TOMCAT_SCHEME
            value: "https"
          - name: ATL_TOMCAT_SECURE
            value: "true"
          - name: CONFLUENCE_HOME
            value: /var/atlassian/application-data/confluence/
          - name: JVM_MINIMUM_MEMORY
            value: "1024m"
          - name: JVM_MAXIMUM_MEMORY
            value: "16184m"
          - name: ATL_JDBC_URL
            value: "jdbc:postgresql://db.admin.t-rex.dsop.io:5432/mattermost"
          - name: ATL_JDBC_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: PGUSER
          - name: ATL_JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: PGPASSWORD
          - name: ATL_DB_TYPE
            value: "postgresql"
        volumeMounts:
          - name: "confluence-persistent-storage"
            mountPath: /var/atlassian/application-data/confluence/
          - name: "confluence-datacenter"
            mountPath: /var/atlassian/confluence-datacenter/
          - name: "server-xml-j2"
            mountPath: /opt/atlassian/etc/server.xml.j2
            subPath: server.xml.j2

      volumes:
        - name: "confluence-datacenter"
          persistentVolumeClaim:
            claimName: confluence-shared
        - name: init-script
          configMap:
            name: init-script
            defaultMode: 0744
        - name: server-xml-j2
          configMap:
            name: server-xml-j2
            defaultMode: 0744

  volumeClaimTemplates:
  - metadata:
      name: confluence-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "20Gi"
      storageClassName: "ebs"
