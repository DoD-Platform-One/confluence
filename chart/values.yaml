hostnamePrefix: confluence
## This is domain name as per chat from bigbang
hostname: dev.bigbang.mil
istio:
  enabled: false
  gateways:
  - istio-system/public
  hardened:
    enabled: false
    customAuthorizationPolicies: []
      # - name: "allow-nothing"
      #   enabled: true
      #   spec: {}
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    customServiceEntries: []

## Embedded PostgreSQL
## Configuration values for postgresql dependency
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/README.md

## Note:
# If external DB values in {{ .Values.database }} are set,
# that config will be injected into the Confluence pod (even if postgresql.install is true)
postgresql:
  # Enable to deploy the cluster-internal PostgreSQL pod
  install: false

  image:
    registry: registry1.dso.mil
    debug: true
    repository: ironbank/opensource/postgres/postgresql
    tag: "17.6"
    pullSecrets:
    - private-registry

  auth:
    username: confuser
    ## These need to be set, for the sake of bitnami/postgresql upgrade patterns.
    ## They are overridden by use of `existingSecret`
    password: bogus-satisfy-upgrade
    postgresPassword: bogus-satisfy-upgrade
    ##
    database: confluence

    # Example secret:
    # kubectl create secret generic <secretname> -n <namespace> --from-literal=<userpasswordkey>=<password> --from-literal=<adminpasswordkey>=<password>
    existingSecret:
    secretKeys:
      adminPasswordKey:
      userPasswordKey:

  primary:
    # # Adding the following podLabels will properly label the package to be connected in Kiali (if Kiali is enabled)
    # # Other labels can be added with or without templating
    # podLabels:
    #   app: "confluence-{{ .Chart.Name }}-primary"
    #   version: "{{ .Chart.AppVersion }}"
    ## Sets persistence to work with the IB image
    persistence:
      mountPath: /var/lib/postgresql
    initdb:
      args: "-A scram-sha-256"
    containerSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true

    ## POSTGRES_DB is the var that the IB/official Postgres image expects
    extraEnvVars:
      - name: POSTGRES_DB
        value: "{{ .Values.auth.database }}"

  ## Sets persistence to work with the IB image
  postgresqlDataDir: /var/lib/postgresql/pgdata/data

  volumePermissions:
    enabled: false

# Values for bigbang helm tests
bbtests:
  enabled: false
  cypress:
    artifacts: true
    envs:
      cypress_url: 'http://{{ include "common.names.fullname" . }}:{{ .Values.upstream.confluence.service.port }}/setup/setuplicense.action'
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "1"
        memory: "2Gi"

# -- Image used for the upstream provided helm tests
helmTestImage: "registry1.dso.mil/ironbank/big-bang/base:2.1.0"

hpa:
  enabled: false
  maxReplicas: 4
  cpu: 70
  memory: 80
  behavior:
    enabled: false
    time: 300

networkPolicies:
  enabled: false
  ingressLabels:
    app: public-ingressgateway
    istio: ingressgateway
  allowMinioOperatorIngress:
    enabled: false
  controlPlaneCidr: "0.0.0.0/0"
  additionalPolicies: []

upstream:
  nameOverride: "confluence"
  image:
    repository: registry1.dso.mil/ironbank/atlassian/confluence-data-center/confluence-node-lts
    pullPolicy: Always
    imagePullSecrets: private-registry
    tag: "9.2.8"
  serviceAccount:
    create: true
    name:
    imagePullSecrets:
      - name: private-registry
    annotations: {}

    role:
      create: true
    clusterRole:
      create: false
      name:
    roleBinding:
      create: true
    clusterRoleBinding:
      create: false
      name:
    eksIrsa:
      roleArn:
  database:
    type:
    user:
    password: userpassword
    url:
    credentials:
      secretName:
      usernameSecretKey: username
      passwordSecretKey: password
  volumes:
    sharedHome:
      efs:
        enabled: false
        driver: 
        efsid: 
        persistentVolumeClaim:
          create: false
          accessModes:
          - ReadWriteMany        
          storageClassName:         
          resources:
            requests:
              storage: 1Gi
      nfs:
        enabled: false
        server: IP
        path: /
        persistentVolumeClaim:
          create: false
          accessModes:
          - ReadWriteMany
          storageClassName: 
          resources:
            requests:
              storage: 1Gi
      nfsPermissionFixer:
        enabled: false
        mountPath: "/shared-home"
        imageRepo:  registry1.dso.mil/ironbank/redhat/ubi/ubi8-minimal
        imageTag: "8.10"
        resources: {}
    additional:
      - name: server-xml-j2
        configMap:
          name: server-xml-j2
          defaultMode: 0744
      - name: server-xml
        configMap:
          name: server-xml
          defaultMode: 0744
      - name: footer-content-vm
        configMap:
          name: footer-content-vm
          defaultMode: 0744
  confluence:
    containerSecurityContext:
      runAsUser: 2002
      runAsGroup: 2002
      runAsNonRoot: true
      capabilities:
        drop:
          - ALL
    readinessProbe:
      customProbe: {}
    startupProbe:
      enabled: false
    livenessProbe:
      initialDelaySeconds: 60
    additionalJvmArgs:
      # https://access.redhat.com/documentation/en-us/openjdk/11/html-single/configuring_openjdk_11_on_rhel_with_fips/index#config-fips-in-openjdk
      - -Dcom.redhat.fips=false
    additionalVolumeMounts:
      - name: "server-xml-j2"
        mountPath: /opt/atlassian/etc/server.xml.j2
        subPath: server.xml.j2
      - name: "server-xml"
        mountPath: /opt/atlassian/confluence/conf/server.xml
        subPath: server.xml
      - mountPath: /opt/atlassian/confluence/confluence/decorators/includes/footer-content.vm
        name: footer-content-vm
        subPath: footer-content.vm
  monitoring:
    jmxExporterInitContainer:
      runAsRoot: true
      customSecurityContext: {}
      resources: {}
    jmxExporterImageRepo: registry1.dso.mil/ironbank/opensource/prometheus/jmx-exporter
    jmxExporterImageTag: 0.18.0
    grafana:
      dashboardLabels:
        grafana_dashboard: "1"
  fluentd:
    imageRepo: fluent/fluentd-kubernetes-daemonset
    imageTag: v1.11.5-debian-elasticsearch7-1.2
  testPods:
    image:
      permissionsTestContainer: registry1.dso.mil/ironbank/redhat/ubi/ubi8-minimal:8.10
      statusTestContainer: registry1.dso.mil/ironbank/big-bang/base:2.1.0



